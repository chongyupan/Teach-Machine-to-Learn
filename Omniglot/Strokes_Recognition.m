function [ Strokes_Num,Attribute,Relation] = Strokes_Recognition( Sketch_Data,Relation_Distance )
%% Sketch_Recognition; 识别该sketch的Attribute和Relation：
Selext_Points_Num_of_Stroke=20;     
% Relation_Distance: 每一笔画与上一笔画的关系阈值：
% 1:start at the beginning of the previous stroke;
% 2:start at the end of the previous stroke;
% 3:start at the middle of the previous stroke;
% 0: the others;
raw_x=Sketch_Data(:,1);
raw_y=Sketch_Data(:,2);
raw_p=Sketch_Data(:,3);
zero_index=find(raw_p==0);
Strokes_Num=length(zero_index);                 % 笔画数
Points_Num_of_Stroke(1)=zero_index(1);          % 第一笔画的点数
for (i=2:Strokes_Num)
    Points_Num_of_Stroke(i)=zero_index(i)-zero_index(i-1);    % 其余笔画的点数
end
% NOTE:笔画点数要注意：绘制的草图中，每一笔画应尽量保证大于2*10+3，保证RNN数据有效；
for j=1:Points_Num_of_Stroke(1)                % 抽取x(1,j), y(1,j)，第1笔画第j个点横、纵坐标
    x_axis(1,j)=raw_x(j);
    y_axis(1,j)=raw_y(j);
end
for i=2:Strokes_Num;                           % 抽取x(i,j), y(i,j) ,i>=2， 表示第i笔画第j个点横、纵坐标
    for j=1:Points_Num_of_Stroke(i)
        x_axis(i,j)=raw_x(zero_index(i-1)+j);
        y_axis(i,j)=raw_y(zero_index(i-1)+j);
    end
end
%  将原始数据(x,y,p)转化为RNN用的数据格式(x,y,stroke_num)
for i=1:Strokes_Num
    %     if (Points_Num_of_Stroke(i)< (Selext_Points_Num_of_Stroke+1))
    %         fprintf('Stroke %d has NOT enough Points Data to Sample\nPlease Draw Again!\n',i);
    %     end
    for j=1:Selext_Points_Num_of_Stroke+1
        x(j,1,i)=x_axis(i,max(1,floor(Points_Num_of_Stroke(i)/(Selext_Points_Num_of_Stroke+1)*j)));       % 隔一点采样，尽可能使得样本能够表征数据特征
        x(j,2,i)=-y_axis(i,max(1,floor(Points_Num_of_Stroke(i)/(Selext_Points_Num_of_Stroke+1)*j)));      % 坐标系转换，Matlab采集为右上坐标系，RNN处理为右下坐标系
    end
end
% 将RNN用的数据格式转化为增量表示
for i=1:Strokes_Num
    for j=1:Selext_Points_Num_of_Stroke
        delta_x(j,1,i)=x(j+1,1,i)-x(j,1,i);
        delta_x(j,2,i)=x(j+1,2,i)-x(j,2,i);
    end
end
% 将向量长度归一化
for i=1:Strokes_Num
    for j=1:Selext_Points_Num_of_Stroke
        total=sqrt(delta_x(j,1,i).^2+delta_x(j,2,i).^2);
        delta_x(j,1,i)=delta_x(j,1,i)/total;
        delta_x(j,2,i)=delta_x(j,2,i)/total;
    end
end
delta_x=min(delta_x,1);     % 防止delta_x=NaN;
% Transform 2D sketch delta_x[Selext_Points_Num_of_Stroke,2,Strokes_Num] to 1D vector x_data[Strokes_Num,2*Selext_Points_Num_of_Stroke]
for i=1:Strokes_Num
    for k=1:2
        for j=1:Selext_Points_Num_of_Stroke
            x_data(i,(k-1)*Selext_Points_Num_of_Stroke+j)=delta_x(j,k,i);
        end
    end
end
%% 计算每一笔画与前一笔画的Relation： 1:start at the beginning of the previous stroke; 2:start at the end of the previous stroke; 3:start at the middle of the previous stroke; 0: the others;
Relation(1)=0;
for i=2:Strokes_Num
    if Distance(x_axis(i,1),y_axis(i,1),x_axis(i-1,1),y_axis(i-1,1))< Relation_Distance
        Relation(i)=1;
    else if Distance(x_axis(i,1),y_axis(i,1),x_axis(i-1,Points_Num_of_Stroke(i-1)),y_axis(i-1,Points_Num_of_Stroke(i-1)))<Relation_Distance
            Relation(i)=2;
        else
            x_middle_of_previous_point=(x_axis(i-1,1)+x_axis(i-1,Points_Num_of_Stroke(i-1)))/2;
            y_middle_of_previous_point=(y_axis(i-1,1)+y_axis(i-1,Points_Num_of_Stroke(i-1)))/2;
            if  Distance(x_axis(i,1),y_axis(i,1),x_middle_of_previous_point,y_middle_of_previous_point)<Relation_Distance
                Relation(i)=3;
            else
                Relation(i)=0;
            end
        end
    end
end

%%  Omniglot_Dataset：Sketch_Linear_Regression_Model参数： 20点序列，19类笔画：横，竖，撇，捺，圆，半圆……
W=[ -3.72748882e-01   5.23157895e-01   9.23948526e-01  -5.34889221e-01   -4.43246031e+00  -2.33311391e+00   2.62750673e+00   2.86432415e-01    1.36705935e+00   1.13434494e+00  -1.70340574e+00  -8.94425869e-01    1.28945196e+00   5.19237339e-01  -6.38070166e-01   5.71117997e-01   -1.40412652e+00   2.06025648e+00   1.01073039e+00;
    -2.01709688e-01   1.58811897e-01  -1.52059913e-01  -5.44400066e-02   -1.00525308e+00  -2.33662009e+00   1.89086664e+00  -4.98163640e-01   -3.38325769e-01   8.92019033e-01  -1.91042912e+00  -1.05014467e+00    1.84608138e+00   1.56279492e+00  -1.34980762e+00  -7.50752807e-01   -6.12282395e-01   2.27720380e+00   1.63221395e+00;
    -5.71836114e-01  -2.44110283e-02   7.87162408e-02   3.61829311e-01    4.46652710e-01  -1.76467490e+00   1.32966006e+00  -2.38936797e-01   -3.54423523e-01   4.78435792e-02  -1.02051139e+00  -1.35703051e+00    1.48888564e+00  -7.37397492e-01  -1.33574978e-01  -4.54056144e-01    3.31571937e-01   2.19803977e+00   3.73655349e-01;
    7.80193746e-01  -3.92520607e-01  -9.18734968e-01   2.43206933e-01    6.76667213e-01  -9.61415291e-01   8.07034492e-01  -1.28577441e-01   -3.72065045e-02  -8.26616138e-02   7.97578633e-01  -1.29045069e+00    1.02553570e+00   4.59688872e-01  -5.84234476e-01  -7.43619382e-01    5.21842599e-01   3.42600346e-01  -5.14926195e-01;
    -2.45570943e-01  -2.06183478e-01   5.49558997e-01   5.33802509e-01    1.31200743e+00  -8.39674711e-01   7.15179622e-01   3.30617949e-02    2.56321400e-01  -1.02867985e+00   9.00414169e-01  -1.24950016e+00    2.99622416e-01   6.73649609e-01  -5.64639211e-01  -1.73211098e-02    7.65912831e-01  -8.77639651e-01  -1.01031601e+00;
    -7.73485377e-02   1.45309061e-01  -7.70364165e-01   4.37615782e-01    1.09706593e+00  -7.33368337e-01   5.56395173e-01   4.95780289e-01    3.93062174e-01  -3.72080386e-01   1.99666893e+00  -7.29537249e-01   -8.04347917e-02   8.28604043e-01  -1.93469405e-01   8.11536193e-01    1.31611621e+00  -2.64405704e+00  -2.47749424e+00;
    6.55910969e-01   3.21126610e-01  -2.91783988e-01   7.19224930e-01    1.23015177e+00  -6.37477160e-01   3.97425145e-01   1.20911129e-01   -3.87111604e-01  -1.19946384e+00   7.87076652e-01  -6.21578097e-01    1.44155547e-01   9.26268876e-01  -7.22367167e-01  -5.95567763e-01    5.79636276e-01  -1.29924309e+00  -1.27291679e-01;
    5.13316572e-01   1.53422654e-01   2.11484551e-01   6.13298476e-01    3.16174142e-02  -2.67212808e-01   1.05986930e-01   4.25223857e-01   -4.69258606e-01  -7.83010244e-01   1.03322601e+00  -1.00236140e-01   -2.80248970e-01   9.93604124e-01   1.71195460e-03  -6.64400995e-01    5.61847568e-01  -7.72740722e-01  -1.30762649e+00;
    5.18657684e-01  -6.24873862e-02   6.13426507e-01   6.96059763e-01   -2.70451337e-01  -7.30543375e-01   4.28629398e-01   9.90331233e-01   -1.45137936e-01  -1.87346435e+00   4.74321127e-01  -2.04628825e-01    1.83303263e-02  -2.03851655e-01  -2.32543901e-01   2.51644671e-01   -4.66135859e-01  -6.13517046e-01   8.11365008e-01;
    6.35414362e-01  -9.14493650e-02  -8.30204546e-01   6.36691153e-01   -8.86260271e-02  -1.12933826e+00   2.21421212e-01   2.84476280e-02    4.61416245e-01  -1.74630964e+00   2.20249161e-01  -7.36203641e-02   -2.47179046e-01   1.02749729e+00   2.82080501e-01   2.32012939e+00   -7.19963312e-01  -4.05357212e-01  -5.01296222e-01;
    4.57798570e-01   1.71599805e-01  -2.14131430e-01   1.16077411e+00    2.58013248e-01  -7.67281651e-01  -6.88235939e-01   4.47795212e-01    1.05418837e+00  -2.08417153e+00  -8.26529384e-01  -3.22191924e-01   -3.33382666e-01  -5.44123054e-01  -4.77902591e-01   1.24118185e+00   -1.04653454e+00   1.11113930e+00   1.40199912e+00;
    3.41247261e-01   4.84145507e-02  -9.61687043e-03   9.95494604e-01    7.87645936e-01   4.56952780e-01  -1.40768242e+00  -1.61744714e-01    5.65388262e-01   7.18560994e-01  -1.43658018e+00   2.04721719e-01   -7.27236867e-01  -1.03247023e+00  -8.70179892e-01   8.62875700e-01   -8.23820412e-01   1.64405143e+00  -1.56018227e-01;
    7.28402734e-01  -3.49493563e-01   6.66436434e-01   7.83415616e-01    4.28735346e-01   5.49597681e-01  -3.47976595e-01  -3.09856772e-01    2.00820476e-01   1.45941794e-01  -7.49510229e-01   8.32244575e-01   -9.60571826e-01  -1.86211061e+00   2.29930520e-01   6.19458556e-01   -4.37271237e-01   2.84580380e-01  -4.52767700e-01;
    9.14594978e-02   1.85494050e-01  -4.14292127e-01   1.02110505e+00   -7.56787539e-01   4.34692025e-01  -1.24903703e+00   4.71429825e-01   -1.85164616e-01   3.35375667e-01   5.32262981e-01   3.32675755e-01   -1.93342626e-01   7.92902827e-01  -2.12191552e-01  -5.16162097e-01   -1.53268278e-01  -4.58475649e-01  -5.86742312e-02;
    1.64909676e-01   4.09818560e-01  -9.03508902e-01   1.32816747e-01   -6.37036026e-01   1.39099658e+00  -4.24054325e-01  -3.33553940e-01   -6.62883341e-01  -5.98815501e-01   5.60277700e-01   1.03025639e+00    4.74894971e-01   8.59201252e-02  -2.61496872e-01  -7.06506252e-01   -6.45212412e-01  -9.24658060e-01   1.84783435e+00;
    4.15370435e-01   7.04007208e-01   1.17829077e-01   7.93568730e-01   -1.23224247e+00   1.07102191e+00  -3.78085226e-01  -1.99671060e-01   -1.58106089e-01  -1.54621089e+00   6.09944165e-01   7.75984764e-01   -5.23753427e-02  -4.77707535e-01   9.98368412e-02   2.45739341e-01   -9.44112778e-01  -1.78370833e+00   1.93891466e+00;
    2.24901512e-01  -3.56809735e-01  -8.63866270e-01   1.04619014e+00    2.66126413e-02   1.57323468e+00  -1.24811828e+00  -6.92838192e-01    1.48172915e-01   1.96016145e+00   5.58098018e-01   9.05844927e-01   -8.02466035e-01  -1.39532709e+00   1.48599505e+00   4.95031118e-01   -1.02422941e+00  -1.73648763e+00  -3.04102004e-01;
    8.01148593e-01   1.20848328e-01   8.35797727e-01   1.21041298e+00    2.45482132e-01   1.93398607e+00  -2.53283405e+00  -7.99466729e-01    4.88005906e-01   1.67589152e+00  -1.21429110e+00   4.89021838e-01   -6.98532343e-01  -1.29836953e+00   1.87312245e+00  -7.67506510e-02   -8.85539234e-01  -1.60091591e+00  -5.67015767e-01;
    1.09192327e-01   6.34929895e-01  -7.80143321e-01   1.70636749e+00   -1.94135547e-01   2.25486040e+00  -1.93742764e+00   6.27250850e-01   -4.71886210e-02   2.21333718e+00  -1.01892996e+00   4.31222647e-01   -1.15083194e+00  -9.90745246e-01   1.16337037e+00  -5.32104194e-01   -6.05202973e-01  -8.28758836e-01  -1.05506217e+00;
    -4.98877764e-02   4.76547033e-01  -2.75308371e-01   1.68784067e-01   -9.61796641e-01   7.21140981e-01  -1.31642771e+00   1.02219987e+00   -2.51232833e-01   9.68002379e-01  -2.17716217e-01   1.39369404e+00   -5.33430517e-01  -1.77679145e+00   1.81918275e+00   3.18089247e-01   -7.38318384e-01   9.59888995e-02  -8.62724185e-01;
    -1.88608002e-02   1.53596926e+00   7.45497346e-01   1.73708215e-01   -9.11567271e-01   1.88467234e-01  -6.31898880e-01  -1.79438257e+00    1.80651569e+00  -1.17613602e+00  -9.62163568e-01  -8.93574417e-01   -3.62048537e-01   1.86880791e+00   1.63102996e+00   5.28880179e-01    1.08195257e+00  -1.66924429e+00  -1.14094484e+00;
    -1.71618313e-01   5.36148846e-01  -1.16311741e+00   1.20573926e+00   -9.76311266e-01  -4.55834270e-01  -4.17283535e-01  -1.47058916e+00    2.43996477e+00  -1.24753308e+00   5.69130540e-01  -1.60201979e+00   -1.25928164e+00   3.58043075e-01   2.31769276e+00   2.30559134e+00    9.59659636e-01  -7.46271968e-01  -1.18211186e+00;
    1.18972465e-01   7.82848477e-01  -7.56782711e-01   4.27578598e-01   -7.40974605e-01   1.57978788e-01  -3.26782823e-01  -1.28162098e+00    1.43715668e+00  -1.71467289e-01  -3.26034009e-01  -9.72388685e-01   -1.41219115e+00  -6.04024112e-01   9.92637932e-01   1.35181141e+00    6.52168155e-01   1.69777617e-01   5.01340985e-01;
    7.56151155e-02   1.14147238e-01   4.86742966e-02   6.32351398e-01   -1.05355823e+00   3.65017712e-01   4.40524280e-01  -1.45781088e+00    1.34310102e+00  -4.57911581e-01   2.83883572e-01  -1.29433572e+00   -6.18979454e-01   3.60911667e-01   9.57790494e-01  -2.77415484e-01   -3.30124676e-01   6.34663582e-01   2.33461484e-01;
    -8.26603770e-01  -1.62412286e-01  -7.87252188e-02   1.41231194e-01    3.40745568e-01   2.33080462e-01   1.86240852e-01  -9.16202605e-01    1.67223835e+00   4.34181660e-01  -4.51175541e-01  -1.95249245e-01   -8.23513091e-01   5.91012001e-01   7.27496803e-01  -1.10613334e+00   -1.43861449e+00   8.80032301e-01   7.92378604e-01;
    -1.39362693e-01   9.17006843e-03  -6.54223887e-03   5.16750574e-01    6.77914679e-01   1.59009025e-01   1.22555129e-01  -8.14475119e-01    6.08384371e-01   3.78390133e-01   1.39993638e-01  -1.63177341e-01    3.91150713e-02   7.19874024e-01   1.13415861e+00  -2.79793811e+00   -2.56664681e+00   4.29630756e-01   1.55320287e+00;
    1.80802345e-01   5.85842170e-02  -2.48685852e-01   3.19321930e-01    1.68793106e+00   1.90401033e-01  -8.65913182e-02  -7.67541468e-01    6.20534539e-01   1.97746480e+00   2.62460679e-01  -1.16105640e+00   -9.79519784e-01   3.73852819e-01   6.44828081e-01  -8.68225098e-01   -1.11120021e+00  -1.05654132e+00  -3.68116386e-02;
    4.96028692e-01   4.02760245e-02   6.70988739e-01   3.03939939e-01    1.80274177e+00  -2.03970566e-01   8.68470073e-02  -6.11767650e-01    5.40004577e-03   7.65148938e-01  -1.13604581e+00  -1.60281509e-01   -2.60005206e-01   1.33967161e+00  -1.91155493e-01  -1.00236312e-01   -1.77824605e+00  -8.75077248e-01  -1.94246754e-01;
    -4.84010726e-01  -3.55171591e-01   7.35085309e-01   9.71616864e-01    1.73910367e+00  -4.32366043e-01   2.18209252e-01  -9.55121279e-01   -2.97689825e-01   6.74518228e-01  -9.61436257e-02   4.84095573e-01   -2.79580534e-01   6.63745701e-01  -3.96883965e-01   3.06154042e-01   -2.44406509e+00   1.98107749e-01  -2.49592841e-01;
    8.28058571e-02   3.43918025e-01  -1.63167536e-01   4.46170568e-01    3.58696431e-01  -4.23855066e-01   8.32885265e-01  -1.15616933e-01   -1.01959936e-01   1.46484599e-01  -7.86776066e-01  -2.00307220e-01    1.09681867e-01   1.29458591e-01  -3.00592154e-01   6.92428291e-01   -1.61520875e+00   8.62276778e-02   4.78733361e-01;
    2.87522584e-01   7.03524202e-02  -9.55654085e-01   4.45039243e-01   -3.26993495e-01   7.95966685e-02   4.09198701e-01   1.99685916e-02   -8.79403889e-01   4.96526808e-01   9.41438496e-01  -3.69217902e-01    8.01176250e-01  -4.61370170e-01   1.80158183e-01  -9.95556265e-02   -1.35950923e-01  -3.03362757e-01  -1.99462935e-01;
    -6.45087540e-01   7.40107894e-02   4.42280769e-01   7.05382705e-01   -1.79123139e+00  -2.97573924e-01   2.03399017e-01   5.49235165e-01   -1.10684596e-01  -9.62147638e-02   9.70999226e-02  -3.66728216e-01    4.80410933e-01   3.97433370e-01  -4.03079391e-01  -1.50845796e-01    1.29087579e+00  -3.80459338e-01   1.78360706e-03;
    8.67045581e-01   2.62207121e-01  -3.54775816e-01   4.65194315e-01   -1.33023584e+00   1.63118616e-01  -4.77748007e-01   4.37576950e-01   -1.07191801e+00   4.50165004e-01   1.71770439e-01   1.09169446e-01    1.00482953e+00  -9.19978201e-01  -4.92933333e-01  -8.44033003e-01    1.15386152e+00  -8.94138590e-02   4.96100515e-01;
    -2.87568510e-01   3.21882635e-01  -6.83156013e-01   6.68329835e-01   -8.03897738e-01   1.62781119e-01  -6.95486069e-01   2.31039792e-01   -1.04367471e+00  -4.09485370e-01   7.41301954e-01   3.09098691e-01    7.22712994e-01  -5.28869927e-01  -3.66236985e-01   4.58783209e-01    1.49342310e+00  -1.80477232e-01  -1.10498838e-01;
    -7.50041544e-01   4.21935350e-01   6.60161376e-01   5.43894529e-01   -1.80437517e+00   7.89779544e-01  -1.35829374e-01   8.52521718e-01   -1.11183870e+00   9.37253162e-02  -5.94766915e-01   3.70102793e-01    4.82997447e-01  -1.24548125e+00  -6.59948945e-01  -4.28088963e-01    1.89054000e+00   6.58696592e-01  -3.39791253e-02;
    1.32757738e-01   4.44821388e-01  -1.21478096e-01   6.57618701e-01   -1.14756966e+00  -1.12372331e-01   3.00104618e-01   7.67409921e-01   -9.26917672e-01  -7.03638554e-01   1.62137002e-01   1.21397328e+00    8.88483763e-01  -9.87957358e-01  -1.00891054e+00  -9.99661744e-01    1.53462255e+00   1.57181174e-01  -2.50606418e-01;
    2.21343949e-01   1.11358356e+00  -1.41881502e+00   1.16655850e+00   -1.83056676e+00   2.63286293e-01   4.44122285e-01   1.05097711e+00   -1.22573769e+00  -1.82663336e-01  -6.69994891e-01   1.44082439e+00    1.14208913e+00   3.94625276e-01  -1.21294880e+00  -2.51116931e-01    5.00058293e-01  -8.95324647e-01  -5.03054298e-02;
    -2.39759371e-01   9.03012216e-01   3.13749492e-01   1.02656996e+00   -7.36393213e-01  -2.07018211e-01   4.91215289e-01   1.33750367e+00   -1.82671165e+00   2.96067327e-01  -4.16754961e-01   9.35761809e-01    2.04945874e+00  -2.95198846e+00  -1.22027826e+00   1.50890470e+00   -7.20929623e-01  -7.26787865e-01   1.84371099e-01;
    1.30317435e-01   1.41215694e+00  -2.64644295e-01   7.50070155e-01    3.98897767e-01  -8.49556148e-01  -4.51316833e-01   1.03113210e+00   -1.29657412e+00   1.64244592e+00  -3.98769289e-01   1.70300555e+00    1.58717060e+00  -1.04374075e+00  -1.02897632e+00   9.64197397e-01   -1.89361966e+00  -4.86530542e-01  -1.90566647e+00;
    7.63339818e-01   2.94018000e-01   7.15562224e-01   8.60361218e-01    1.27272892e+00   1.86480775e-01   1.74491182e-01   7.09345400e-01   -7.71473169e-01   5.47841191e-01  -2.24924251e-01  -6.10501051e-01    3.64837140e-01  -4.96080428e-01  -2.03411639e-01   9.64990497e-01   -2.05397916e+00  -8.87170851e-01  -1.60645676e+00];

b=[ 3.4374361  -0.28508431  6.91808271 -6.72981358  2.51547289 -1.82843924 -2.28242922 -1.20693243 -2.9861095  -1.9084307   5.42605686  0.07908955 -2.12281585 -0.54356456 -1.18316388  0.11055147 -0.29900956  0.47304592  2.41637111];

%% 计算每一个样本的输出，得出判断结果
for j=1:Strokes_Num     % 每一个样本计算其状态及观测输出o
    % 使用Sketch_Linear_Regression_Model: y=softmax(Wx+b)进行样本类型检测：
    o=x_data(j,:)*W+b;
    % 计算softmax函数值，据此选择结果
    p_output=mysoftmax(o);
    Attribute(j) = min(find(p_output==max(p_output)));
end

end

